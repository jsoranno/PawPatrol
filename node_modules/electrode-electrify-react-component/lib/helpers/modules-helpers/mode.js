"use strict";

exports.__esModule = true;
exports.highlightMode = undefined;

var _d = require("d3");

var _d2 = _interopRequireDefault(_d);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var modes = null; /*eslint-disable no-magic-numbers*/

exports.default = function (updateMode, domElements) {
  modes = _d2.default.select(domElements.scaleList).selectAll("li").data(["count", "size"]).enter().append("li").style("height", "48px").style("line-height", "48px").style("margin-bottom", "12px").style("cursor", "pointer").style("font-size", "1.2em").style("text-align", "right").style("opacity", "0.5").style("padding-right", "64px").style("transition", "0.2s").style("position", "relative").style("opacity", "0").on("click", function (d) {
    return updateMode(d, true);
  }).on("mouseover", function (d) {
    _d2.default.select("[ref=" + d + "]").style("left", "0px").style("opacity", "1");
  }).on("mouseout", function (d) {
    _d2.default.select("[ref=" + d + "]").style("left", "100px").style("opacity", "0");
  });

  modes.append("span").text(function (d) {
    return {
      count: "File Count",
      size: "File Size"
    }[d];
  }).attr("ref", function (d) {
    return d;
  }).style("position", "relative").style("left", "100px").style("opacity", "0").style("transition", "opacity 0.2s, left 0.2s");

  modes.append("svg").style("position", "absolute").style("top", "0").style("right", "0").attr({ width: 48, height: 48 }).append("g").each(function (type) {
    _d2.default.select(this) //eslint-disable-line no-invalid-this
    .attr("transform", "translate(8, 8)").selectAll("circle").data(_d2.default.range(0, 16)).enter().append("circle").attr("fill", "#fff").attr("r", function (d, i) {
      return type !== "size" ? 3 : i === 0 || i === 6 ? 6 : 3;
    }) //eslint-disable-line no-nested-ternary, max-len, no-arrow-condition
    .attr("transform", function (d) {
      return "translate(" + [d % 4 * 10, Math.floor(d / 4) * 10] + ")";
    });
  });
};

var highlightMode = exports.highlightMode = function highlightMode(mode) {
  modes.style("opacity", function (d) {
    return d === mode ? 1 : null;
  });
};